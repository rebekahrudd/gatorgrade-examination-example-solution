# Basic workflow
name: build

# Allow write permissions
permissions:
  contents: write

# Use more columns for terminal output
env:
  COLUMNS: 120
  PYTHONIOENCODING: utf8

# Controls when the action will run
# Workflow begins with push or PR events
# Focuses on the main branch only
on: [push, pull_request]

# Create a job matrix with different OSes
jobs:
  build:
    # do not allow a build to run for more than 5 minutes
    timeout-minutes: 5
    # Use a matrix strategy to run on multiple OSes and Python versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Test on multiple OSes and Python versions
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]
    # Define the workflow steps
    steps:
      # Checkout the code of the repository
      - name: Check out Repository Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Setup Python for the current language version
      - name: Setup Python ${{ matrix.python-version }}
        if: always()
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip
      - name: Install Pip
        if: always()
        run: |
          pip install -U pip
          python -m pip install --user pipx
      # Install poetry
      - name: Install Poetry and Project Dependencies
        if: always()
        run: |
          pipx install poetry
          pipx list
          cd exam
          poetry install
      # Confirm correctness with execexam and show
      # detailed report information
      - name: Confirm Correctness with ExecExam
        if: always()
        run: |
          cd exam
          poetry run execexam . ./tests/ --report trace --report status --report failure --report code --report setup  --no-fancy
      # Run GatorGrader: use the gatorgrade.yml in repository's root;
      # note that this runs execexam for some of the checks
        #  pipx install gatorgrade
      - name: Run GatorGrader with GatorGrade
        if: always()
        run:  |
         git+https://github.com/GatorEducator/gatorgrade/tree/windows_bug
         pipx list
         cd exam
         gatorgrade --report env md GITHUB_STEP_SUMMARY
